#!/usr/bin/env python
# -*- coding: utf-8 -*-
#
#  Generated from FHIR 4.0.0-a53ec6ee1b (http://hl7.org/fhir/StructureDefinition/MedicinalProductIndication) on 2019-01-22.
#  2019, SMART Health IT.


from . import domainresource

class MedicinalProductIndication(domainresource.DomainResource):
    """ 
    M
    e
    d
    i
    c
    i
    n
    a
    l
    P
    r
    o
    d
    u
    c
    t
    I
    n
    d
    i
    c
    a
    t
    i
    o
    n
    .
    
    
    I
    n
    d
    i
    c
    a
    t
    i
    o
    n
    f
    o
    r
    t
    h
    e
    M
    e
    d
    i
    c
    i
    n
    a
    l
    P
    r
    o
    d
    u
    c
    t
    .
    
    """
    
    resource_type = "MedicinalProductIndication"
    
    def __init__(self, jsondict=None, strict=True):
        """ Initialize all valid properties.
        
        :raises: FHIRValidationError on validation errors, unless strict is False
        :param dict jsondict: A JSON dictionary to use for initialization
        :param bool strict: If True (the default), invalid variables will raise a TypeError
        """
        
        self.comorbidity = None
        """ 
        C
        o
        m
        o
        r
        b
        i
        d
        i
        t
        y
        (
        c
        o
        n
        c
        u
        r
        r
        e
        n
        t
        c
        o
        n
        d
        i
        t
        i
        o
        n
        )
        o
        r
        c
        o
        -
        i
        n
        f
        e
        c
        t
        i
        o
        n
        a
        s
        p
        a
        r
        t
        o
        f
        t
        h
        e
        i
        n
        d
        i
        c
        a
        t
        i
        o
        n
        .
        List of `CodeableConcept` items (represented as `dict` in JSON). """
        
        self.diseaseStatus = None
        """ 
        T
        h
        e
        s
        t
        a
        t
        u
        s
        o
        f
        t
        h
        e
        d
        i
        s
        e
        a
        s
        e
        o
        r
        s
        y
        m
        p
        t
        o
        m
        f
        o
        r
        w
        h
        i
        c
        h
        t
        h
        e
        i
        n
        d
        i
        c
        a
        t
        i
        o
        n
        a
        p
        p
        l
        i
        e
        s
        .
        Type `CodeableConcept` (represented as `dict` in JSON). """
        
        self.diseaseSymptomProcedure = None
        """ 
        T
        h
        e
        d
        i
        s
        e
        a
        s
        e
        ,
        s
        y
        m
        p
        t
        o
        m
        o
        r
        p
        r
        o
        c
        e
        d
        u
        r
        e
        t
        h
        a
        t
        i
        s
        t
        h
        e
        i
        n
        d
        i
        c
        a
        t
        i
        o
        n
        f
        o
        r
        t
        r
        e
        a
        t
        m
        e
        n
        t
        .
        Type `CodeableConcept` (represented as `dict` in JSON). """
        
        self.duration = None
        """ 
        T
        i
        m
        i
        n
        g
        o
        r
        d
        u
        r
        a
        t
        i
        o
        n
        i
        n
        f
        o
        r
        m
        a
        t
        i
        o
        n
        a
        s
        p
        a
        r
        t
        o
        f
        t
        h
        e
        i
        n
        d
        i
        c
        a
        t
        i
        o
        n
        .
        Type `Quantity` (represented as `dict` in JSON). """
        
        self.intendedEffect = None
        """ 
        T
        h
        e
        i
        n
        t
        e
        n
        d
        e
        d
        e
        f
        f
        e
        c
        t
        ,
        a
        i
        m
        o
        r
        s
        t
        r
        a
        t
        e
        g
        y
        t
        o
        b
        e
        a
        c
        h
        i
        e
        v
        e
        d
        b
        y
        t
        h
        e
        i
        n
        d
        i
        c
        a
        t
        i
        o
        n
        .
        Type `CodeableConcept` (represented as `dict` in JSON). """
        
        self.otherTherapy = None
        """ 
        I
        n
        f
        o
        r
        m
        a
        t
        i
        o
        n
        a
        b
        o
        u
        t
        t
        h
        e
        u
        s
        e
        o
        f
        t
        h
        e
        m
        e
        d
        i
        c
        i
        n
        a
        l
        p
        r
        o
        d
        u
        c
        t
        i
        n
        r
        e
        l
        a
        t
        i
        o
        n
        t
        o
        o
        t
        h
        e
        r
        t
        h
        e
        r
        a
        p
        i
        e
        s
        d
        e
        s
        c
        r
        i
        b
        e
        d
        a
        s
        p
        a
        r
        t
        o
        f
        t
        h
        e
        i
        n
        d
        i
        c
        a
        t
        i
        o
        n
        .
        List of `MedicinalProductIndicationOtherTherapy` items (represented as `dict` in JSON). """
        
        self.population = None
        """ 
        T
        h
        e
        p
        o
        p
        u
        l
        a
        t
        i
        o
        n
        g
        r
        o
        u
        p
        t
        o
        w
        h
        i
        c
        h
        t
        h
        i
        s
        a
        p
        p
        l
        i
        e
        s
        .
        List of `Population` items (represented as `dict` in JSON). """
        
        self.subject = None
        """ 
        T
        h
        e
        m
        e
        d
        i
        c
        a
        t
        i
        o
        n
        f
        o
        r
        w
        h
        i
        c
        h
        t
        h
        i
        s
        i
        s
        a
        n
        i
        n
        d
        i
        c
        a
        t
        i
        o
        n
        .
        List of `FHIRReference` items (represented as `dict` in JSON). """
        
        self.undesirableEffect = None
        """ 
        D
        e
        s
        c
        r
        i
        b
        e
        t
        h
        e
        u
        n
        d
        e
        s
        i
        r
        a
        b
        l
        e
        e
        f
        f
        e
        c
        t
        s
        o
        f
        t
        h
        e
        m
        e
        d
        i
        c
        i
        n
        a
        l
        p
        r
        o
        d
        u
        c
        t
        .
        List of `FHIRReference` items (represented as `dict` in JSON). """
        
        super(MedicinalProductIndication, self).__init__(jsondict=jsondict, strict=strict)
    
    def elementProperties(self):
        js = super(MedicinalProductIndication, self).elementProperties()
        js.extend([
            ("comorbidity", "comorbidity", codeableconcept.CodeableConcept, True, None, False),
            ("diseaseStatus", "diseaseStatus", codeableconcept.CodeableConcept, False, None, False),
            ("diseaseSymptomProcedure", "diseaseSymptomProcedure", codeableconcept.CodeableConcept, False, None, False),
            ("duration", "duration", quantity.Quantity, False, None, False),
            ("intendedEffect", "intendedEffect", codeableconcept.CodeableConcept, False, None, False),
            ("otherTherapy", "otherTherapy", MedicinalProductIndicationOtherTherapy, True, None, False),
            ("population", "population", population.Population, True, None, False),
            ("subject", "subject", fhirreference.FHIRReference, True, None, False),
            ("undesirableEffect", "undesirableEffect", fhirreference.FHIRReference, True, None, False),
        ])
        return js


from . import backboneelement

class MedicinalProductIndicationOtherTherapy(backboneelement.BackboneElement):
    """ 
    I
    n
    f
    o
    r
    m
    a
    t
    i
    o
    n
    a
    b
    o
    u
    t
    t
    h
    e
    u
    s
    e
    o
    f
    t
    h
    e
    m
    e
    d
    i
    c
    i
    n
    a
    l
    p
    r
    o
    d
    u
    c
    t
    i
    n
    r
    e
    l
    a
    t
    i
    o
    n
    t
    o
    o
    t
    h
    e
    r
    t
    h
    e
    r
    a
    p
    i
    e
    s
    d
    e
    s
    c
    r
    i
    b
    e
    d
    a
    s
    p
    a
    r
    t
    o
    f
    t
    h
    e
    i
    n
    d
    i
    c
    a
    t
    i
    o
    n
    .
    """
    
    resource_type = "MedicinalProductIndicationOtherTherapy"
    
    def __init__(self, jsondict=None, strict=True):
        """ Initialize all valid properties.
        
        :raises: FHIRValidationError on validation errors, unless strict is False
        :param dict jsondict: A JSON dictionary to use for initialization
        :param bool strict: If True (the default), invalid variables will raise a TypeError
        """
        
        self.medicationCodeableConcept = None
        """ 
        R
        e
        f
        e
        r
        e
        n
        c
        e
        t
        o
        a
        s
        p
        e
        c
        i
        f
        i
        c
        m
        e
        d
        i
        c
        a
        t
        i
        o
        n
        (
        a
        c
        t
        i
        v
        e
        s
        u
        b
        s
        t
        a
        n
        c
        e
        ,
        m
        e
        d
        i
        c
        i
        n
        a
        l
        p
        r
        o
        d
        u
        c
        t
        o
        r
        c
        l
        a
        s
        s
        o
        f
        p
        r
        o
        d
        u
        c
        t
        s
        )
        a
        s
        p
        a
        r
        t
        o
        f
        a
        n
        i
        n
        d
        i
        c
        a
        t
        i
        o
        n
        o
        r
        c
        o
        n
        t
        r
        a
        i
        n
        d
        i
        c
        a
        t
        i
        o
        n
        .
        Type `CodeableConcept` (represented as `dict` in JSON). """
        
        self.medicationReference = None
        """ 
        R
        e
        f
        e
        r
        e
        n
        c
        e
        t
        o
        a
        s
        p
        e
        c
        i
        f
        i
        c
        m
        e
        d
        i
        c
        a
        t
        i
        o
        n
        (
        a
        c
        t
        i
        v
        e
        s
        u
        b
        s
        t
        a
        n
        c
        e
        ,
        m
        e
        d
        i
        c
        i
        n
        a
        l
        p
        r
        o
        d
        u
        c
        t
        o
        r
        c
        l
        a
        s
        s
        o
        f
        p
        r
        o
        d
        u
        c
        t
        s
        )
        a
        s
        p
        a
        r
        t
        o
        f
        a
        n
        i
        n
        d
        i
        c
        a
        t
        i
        o
        n
        o
        r
        c
        o
        n
        t
        r
        a
        i
        n
        d
        i
        c
        a
        t
        i
        o
        n
        .
        Type `FHIRReference` (represented as `dict` in JSON). """
        
        self.therapyRelationshipType = None
        """ 
        T
        h
        e
        t
        y
        p
        e
        o
        f
        r
        e
        l
        a
        t
        i
        o
        n
        s
        h
        i
        p
        b
        e
        t
        w
        e
        e
        n
        t
        h
        e
        m
        e
        d
        i
        c
        i
        n
        a
        l
        p
        r
        o
        d
        u
        c
        t
        i
        n
        d
        i
        c
        a
        t
        i
        o
        n
        o
        r
        c
        o
        n
        t
        r
        a
        i
        n
        d
        i
        c
        a
        t
        i
        o
        n
        a
        n
        d
        a
        n
        o
        t
        h
        e
        r
        t
        h
        e
        r
        a
        p
        y
        .
        Type `CodeableConcept` (represented as `dict` in JSON). """
        
        super(MedicinalProductIndicationOtherTherapy, self).__init__(jsondict=jsondict, strict=strict)
    
    def elementProperties(self):
        js = super(MedicinalProductIndicationOtherTherapy, self).elementProperties()
        js.extend([
            ("medicationCodeableConcept", "medicationCodeableConcept", codeableconcept.CodeableConcept, False, "medication", True),
            ("medicationReference", "medicationReference", fhirreference.FHIRReference, False, "medication", True),
            ("therapyRelationshipType", "therapyRelationshipType", codeableconcept.CodeableConcept, False, None, True),
        ])
        return js


import sys
try:
    from . import codeableconcept
except ImportError:
    codeableconcept = sys.modules[__package__ + '.codeableconcept']
try:
    from . import fhirreference
except ImportError:
    fhirreference = sys.modules[__package__ + '.fhirreference']
try:
    from . import population
except ImportError:
    population = sys.modules[__package__ + '.population']
try:
    from . import quantity
except ImportError:
    quantity = sys.modules[__package__ + '.quantity']
